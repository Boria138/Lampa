name: Build and Release AppImage and macOS builds

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Install AppImage dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2

      - name: Build AppImage
        run: |
          npm run build-linux
          chmod +x dist/lampa-x86_64.AppImage

      - name: Extract version from tag
        id: get_version
        run: |
          if [[ "${{ github.ref }}" =~ ^refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "version=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
          else
            echo "Invalid tag format: ${{ github.ref }}"
            exit 1
          fi

      - name: Extract changelog for version
        id: changelog
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          awk "/^## \\[$VERSION\\]/ {flag=1; next} /^## \\[/ {flag=0} flag" CHANGELOG.md > changelog.txt
          if [ ! -s changelog.txt ]; then
            echo "No changelog entries found for version $VERSION"
            echo "body=No changelog entries found for version $VERSION" >> $GITHUB_OUTPUT
          else
            echo "body<<EOF" >> $GITHUB_OUTPUT
            cat changelog.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lampa-linux
          path: dist/lampa-x86_64.AppImage

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Build for macOS
        run: |
          npm run build-mac -- --${{ matrix.arch }}

      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: lampa-macos-${{ matrix.arch }}
          path: dist/*.dmg

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Publish to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ needs.build-linux.outputs.changelog }}
          files: |
            lampa-linux/lampa.AppImage
            lampa-macos-x64/*.dmg
            lampa-macos-arm64/*.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
